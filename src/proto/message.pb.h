// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_INCLUDED_message_2eproto
#define PROTOBUF_INCLUDED_message_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto 

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_message_2eproto
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Message_CmdInfoEntry_DoNotUse;
class Message_CmdInfoEntry_DoNotUseDefaultTypeInternal;
extern Message_CmdInfoEntry_DoNotUseDefaultTypeInternal _Message_CmdInfoEntry_DoNotUse_default_instance_;
class MsgVector;
class MsgVectorDefaultTypeInternal;
extern MsgVectorDefaultTypeInternal _MsgVector_default_instance_;
namespace google {
namespace protobuf {
template<> ::Message* Arena::CreateMaybeMessage<::Message>(Arena*);
template<> ::Message_CmdInfoEntry_DoNotUse* Arena::CreateMaybeMessage<::Message_CmdInfoEntry_DoNotUse>(Arena*);
template<> ::MsgVector* Arena::CreateMaybeMessage<::MsgVector>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Message_CmdInfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Message_CmdInfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Message_CmdInfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Message_CmdInfoEntry_DoNotUse();
  Message_CmdInfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Message_CmdInfoEntry_DoNotUse& other);
  static const Message_CmdInfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Message_CmdInfoEntry_DoNotUse*>(&_Message_CmdInfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(NULL);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> cmd_info = 5;
  int cmd_info_size() const;
  void clear_cmd_info();
  static const int kCmdInfoFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      cmd_info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_cmd_info();

  // repeated uint64 fids = 6;
  int fids_size() const;
  void clear_fids();
  static const int kFidsFieldNumber = 6;
  ::google::protobuf::uint64 fids(int index) const;
  void set_fids(int index, ::google::protobuf::uint64 value);
  void add_fids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      fids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_fids();

  // repeated .MsgVector vecs = 7;
  int vecs_size() const;
  void clear_vecs();
  static const int kVecsFieldNumber = 7;
  ::MsgVector* mutable_vecs(int index);
  ::google::protobuf::RepeatedPtrField< ::MsgVector >*
      mutable_vecs();
  const ::MsgVector& vecs(int index) const;
  ::MsgVector* add_vecs();
  const ::google::protobuf::RepeatedPtrField< ::MsgVector >&
      vecs() const;

  // string cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // string job_name = 4;
  void clear_job_name();
  static const int kJobNameFieldNumber = 4;
  const ::std::string& job_name() const;
  void set_job_name(const ::std::string& value);
  #if LANG_CXX11
  void set_job_name(::std::string&& value);
  #endif
  void set_job_name(const char* value);
  void set_job_name(const char* value, size_t size);
  ::std::string* mutable_job_name();
  ::std::string* release_job_name();
  void set_allocated_job_name(::std::string* job_name);

  // int64 target_messenger_id = 2;
  void clear_target_messenger_id();
  static const int kTargetMessengerIdFieldNumber = 2;
  ::google::protobuf::int64 target_messenger_id() const;
  void set_target_messenger_id(::google::protobuf::int64 value);

  // int64 sender_messenger_id = 3;
  void clear_sender_messenger_id();
  static const int kSenderMessengerIdFieldNumber = 3;
  ::google::protobuf::int64 sender_messenger_id() const;
  void set_sender_messenger_id(::google::protobuf::int64 value);

  // uint64 timestamp = 8;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 8;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint64 reply_timestamp = 9;
  void clear_reply_timestamp();
  static const int kReplyTimestampFieldNumber = 9;
  ::google::protobuf::uint64 reply_timestamp() const;
  void set_reply_timestamp(::google::protobuf::uint64 value);

  // int64 target_node_id = 10;
  void clear_target_node_id();
  static const int kTargetNodeIdFieldNumber = 10;
  ::google::protobuf::int64 target_node_id() const;
  void set_target_node_id(::google::protobuf::int64 value);

  // int64 sender_node_id = 11;
  void clear_sender_node_id();
  static const int kSenderNodeIdFieldNumber = 11;
  ::google::protobuf::int64 sender_node_id() const;
  void set_sender_node_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Message_CmdInfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > cmd_info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > fids_;
  mutable int _fids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgVector > vecs_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::internal::ArenaStringPtr job_name_;
  ::google::protobuf::int64 target_messenger_id_;
  ::google::protobuf::int64 sender_messenger_id_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint64 reply_timestamp_;
  ::google::protobuf::int64 target_node_id_;
  ::google::protobuf::int64 sender_node_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgVector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgVector) */ {
 public:
  MsgVector();
  virtual ~MsgVector();

  MsgVector(const MsgVector& from);

  inline MsgVector& operator=(const MsgVector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgVector(MsgVector&& from) noexcept
    : MsgVector() {
    *this = ::std::move(from);
  }

  inline MsgVector& operator=(MsgVector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgVector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgVector* internal_default_instance() {
    return reinterpret_cast<const MsgVector*>(
               &_MsgVector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgVector* other);
  friend void swap(MsgVector& a, MsgVector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgVector* New() const final {
    return CreateMaybeMessage<MsgVector>(NULL);
  }

  MsgVector* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgVector>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgVector& from);
  void MergeFrom(const MsgVector& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgVector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double values = 2;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 2;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values();

  // int32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgVector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::int32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Message

// string cmd = 1;
inline void Message::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::cmd() const {
  // @@protoc_insertion_point(field_get:Message.cmd)
  return cmd_.GetNoArena();
}
inline void Message::set_cmd(const ::std::string& value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.cmd)
}
#if LANG_CXX11
inline void Message::set_cmd(::std::string&& value) {
  
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.cmd)
}
#endif
inline void Message::set_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.cmd)
}
inline void Message::set_cmd(const char* value, size_t size) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.cmd)
}
inline ::std::string* Message::mutable_cmd() {
  
  // @@protoc_insertion_point(field_mutable:Message.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_cmd() {
  // @@protoc_insertion_point(field_release:Message.cmd)
  
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    
  } else {
    
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:Message.cmd)
}

// int64 target_messenger_id = 2;
inline void Message::clear_target_messenger_id() {
  target_messenger_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::target_messenger_id() const {
  // @@protoc_insertion_point(field_get:Message.target_messenger_id)
  return target_messenger_id_;
}
inline void Message::set_target_messenger_id(::google::protobuf::int64 value) {
  
  target_messenger_id_ = value;
  // @@protoc_insertion_point(field_set:Message.target_messenger_id)
}

// int64 sender_messenger_id = 3;
inline void Message::clear_sender_messenger_id() {
  sender_messenger_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::sender_messenger_id() const {
  // @@protoc_insertion_point(field_get:Message.sender_messenger_id)
  return sender_messenger_id_;
}
inline void Message::set_sender_messenger_id(::google::protobuf::int64 value) {
  
  sender_messenger_id_ = value;
  // @@protoc_insertion_point(field_set:Message.sender_messenger_id)
}

// string job_name = 4;
inline void Message::clear_job_name() {
  job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::job_name() const {
  // @@protoc_insertion_point(field_get:Message.job_name)
  return job_name_.GetNoArena();
}
inline void Message::set_job_name(const ::std::string& value) {
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.job_name)
}
#if LANG_CXX11
inline void Message::set_job_name(::std::string&& value) {
  
  job_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.job_name)
}
#endif
inline void Message::set_job_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.job_name)
}
inline void Message::set_job_name(const char* value, size_t size) {
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.job_name)
}
inline ::std::string* Message::mutable_job_name() {
  
  // @@protoc_insertion_point(field_mutable:Message.job_name)
  return job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_job_name() {
  // @@protoc_insertion_point(field_release:Message.job_name)
  
  return job_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_job_name(::std::string* job_name) {
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_name);
  // @@protoc_insertion_point(field_set_allocated:Message.job_name)
}

// map<string, string> cmd_info = 5;
inline int Message::cmd_info_size() const {
  return cmd_info_.size();
}
inline void Message::clear_cmd_info() {
  cmd_info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Message::cmd_info() const {
  // @@protoc_insertion_point(field_map:Message.cmd_info)
  return cmd_info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Message::mutable_cmd_info() {
  // @@protoc_insertion_point(field_mutable_map:Message.cmd_info)
  return cmd_info_.MutableMap();
}

// repeated uint64 fids = 6;
inline int Message::fids_size() const {
  return fids_.size();
}
inline void Message::clear_fids() {
  fids_.Clear();
}
inline ::google::protobuf::uint64 Message::fids(int index) const {
  // @@protoc_insertion_point(field_get:Message.fids)
  return fids_.Get(index);
}
inline void Message::set_fids(int index, ::google::protobuf::uint64 value) {
  fids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Message.fids)
}
inline void Message::add_fids(::google::protobuf::uint64 value) {
  fids_.Add(value);
  // @@protoc_insertion_point(field_add:Message.fids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Message::fids() const {
  // @@protoc_insertion_point(field_list:Message.fids)
  return fids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Message::mutable_fids() {
  // @@protoc_insertion_point(field_mutable_list:Message.fids)
  return &fids_;
}

// repeated .MsgVector vecs = 7;
inline int Message::vecs_size() const {
  return vecs_.size();
}
inline void Message::clear_vecs() {
  vecs_.Clear();
}
inline ::MsgVector* Message::mutable_vecs(int index) {
  // @@protoc_insertion_point(field_mutable:Message.vecs)
  return vecs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MsgVector >*
Message::mutable_vecs() {
  // @@protoc_insertion_point(field_mutable_list:Message.vecs)
  return &vecs_;
}
inline const ::MsgVector& Message::vecs(int index) const {
  // @@protoc_insertion_point(field_get:Message.vecs)
  return vecs_.Get(index);
}
inline ::MsgVector* Message::add_vecs() {
  // @@protoc_insertion_point(field_add:Message.vecs)
  return vecs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgVector >&
Message::vecs() const {
  // @@protoc_insertion_point(field_list:Message.vecs)
  return vecs_;
}

// uint64 timestamp = 8;
inline void Message::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Message::timestamp() const {
  // @@protoc_insertion_point(field_get:Message.timestamp)
  return timestamp_;
}
inline void Message::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Message.timestamp)
}

// uint64 reply_timestamp = 9;
inline void Message::clear_reply_timestamp() {
  reply_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Message::reply_timestamp() const {
  // @@protoc_insertion_point(field_get:Message.reply_timestamp)
  return reply_timestamp_;
}
inline void Message::set_reply_timestamp(::google::protobuf::uint64 value) {
  
  reply_timestamp_ = value;
  // @@protoc_insertion_point(field_set:Message.reply_timestamp)
}

// int64 target_node_id = 10;
inline void Message::clear_target_node_id() {
  target_node_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::target_node_id() const {
  // @@protoc_insertion_point(field_get:Message.target_node_id)
  return target_node_id_;
}
inline void Message::set_target_node_id(::google::protobuf::int64 value) {
  
  target_node_id_ = value;
  // @@protoc_insertion_point(field_set:Message.target_node_id)
}

// int64 sender_node_id = 11;
inline void Message::clear_sender_node_id() {
  sender_node_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::sender_node_id() const {
  // @@protoc_insertion_point(field_get:Message.sender_node_id)
  return sender_node_id_;
}
inline void Message::set_sender_node_id(::google::protobuf::int64 value) {
  
  sender_node_id_ = value;
  // @@protoc_insertion_point(field_set:Message.sender_node_id)
}

// -------------------------------------------------------------------

// MsgVector

// int32 size = 1;
inline void MsgVector::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 MsgVector::size() const {
  // @@protoc_insertion_point(field_get:MsgVector.size)
  return size_;
}
inline void MsgVector::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:MsgVector.size)
}

// repeated double values = 2;
inline int MsgVector::values_size() const {
  return values_.size();
}
inline void MsgVector::clear_values() {
  values_.Clear();
}
inline double MsgVector::values(int index) const {
  // @@protoc_insertion_point(field_get:MsgVector.values)
  return values_.Get(index);
}
inline void MsgVector::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgVector.values)
}
inline void MsgVector::add_values(double value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:MsgVector.values)
}
inline const ::google::protobuf::RepeatedField< double >&
MsgVector::values() const {
  // @@protoc_insertion_point(field_list:MsgVector.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< double >*
MsgVector::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:MsgVector.values)
  return &values_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_message_2eproto
